import{_ as i,c as a,o as e,ad as n}from"./chunks/framework.C2hRbcpH.js";const o=JSON.parse('{"title":"📚 Data","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/guide/data-source.md","filePath":"en-US/guide/data-source.md","lastUpdated":1749668900000}'),t={name:"en-US/guide/data-source.md"};function l(p,s,h,r,d,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="📚-data" tabindex="-1">📚 Data <a class="header-anchor" href="#📚-data" aria-label="Permalink to “📚 Data”">​</a></h1><p>The data required by the chart must be in a fixed format. Use the chart instance API <a href="/en-US/api/instance/setDataLoader">setDataLoader(loader)</a> to interact with the chart.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Timestamp, millisecond, required fields</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Open price, required fields</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Close price, required field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Highest price, required field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  high</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Lowest price, required field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  low</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // volume, optional field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  volume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Turnover, a non-required field, if you need to display the technical indicators &#39;EMV&#39; and &#39;AVP&#39;, you need to fill this field with data.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  turnover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,3)]))}const g=i(t,[["render",l]]);export{o as __pageData,g as default};
