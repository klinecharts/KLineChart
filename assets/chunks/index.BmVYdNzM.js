import{C as a}from"./theme.LLWvAvjg.js";import{b as t,o as n,k as e}from"./framework.5fYc0k1z.js";const i=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('removeOverlay-basic-chart')\\nconst paneId = chart.createIndicator({\\n  name: 'MA',\\n  calcParams: [5],\\n  shouldOhlc: false\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n        const startData = dataList[dataList.length - 50]\\n        const endData = dataList[dataList.length - 10]\\n        const id = chart.createOverlay({\\n          name: 'segment',\\n          paneId: 'candle_pane',\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n        chart.createOverlay({\\n          name: 'priceLine',\\n          paneId,\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n\\n        chart.removeOverlay({ id })\\n      })\\n  }\\n})\\n"}`),d={__name:"index",setup(s){return(r,c)=>(n(),t(a,{title:"removeOverlay-basic",chartId:"removeOverlay-basic-chart",code:e(i).js},null,8,["code"]))}},m=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('removeOverlay-name-chart')\\nconst paneId = chart.createIndicator({\\n  name: 'MA',\\n  calcParams: [5],\\n  shouldOhlc: false\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n        const startData = dataList[dataList.length - 50]\\n        const endData = dataList[dataList.length - 10]\\n        chart.createOverlay({\\n          name: 'segment',\\n          paneId: 'candle_pane',\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n        chart.createOverlay({\\n          name: 'priceLine',\\n          paneId: 'candle_pane',\\n          points: [\\n            { timestamp: startData.timestamp, value: endData.close }\\n          ]\\n        })\\n        chart.createOverlay({\\n          name: 'priceLine',\\n          paneId,\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n\\n        chart.removeOverlay({ name: 'priceLine' })\\n      })\\n  }\\n})\\n"}`),h={__name:"index",setup(s){return(r,c)=>(n(),t(a,{title:"removeOverlay-name",chartId:"removeOverlay-name-chart",code:e(m).js},null,8,["code"]))}},o=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('removeOverlay-groupId-chart')\\nconst paneId = chart.createIndicator({\\n  name: 'MA',\\n  calcParams: [5],\\n  shouldOhlc: false\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n        const startData = dataList[dataList.length - 50]\\n        const endData = dataList[dataList.length - 10]\\n        chart.createOverlay({\\n          name: 'segment',\\n          paneId: 'candle_pane',\\n          groupId: 'group1',\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n        chart.createOverlay({\\n          name: 'priceLine',\\n          paneId: 'candle_pane',\\n          points: [\\n            { timestamp: startData.timestamp, value: endData.close }\\n          ]\\n        })\\n        chart.createOverlay({\\n          name: 'priceLine',\\n          paneId,\\n          groupId: 'group1',\\n          points: [\\n            { timestamp: startData.timestamp, value: startData.high },\\n            { timestamp: endData.timestamp, value: endData.low }\\n          ]\\n        })\\n\\n        chart.removeOverlay({ groupId: 'group1' })\\n      })\\n  }\\n})\\n"}`),v={__name:"index",setup(s){return(r,c)=>(n(),t(a,{title:"removeOverlay-groupId",chartId:"removeOverlay-groupId-chart",code:e(o).js},null,8,["code"]))}};export{d as _,h as a,v as b};
