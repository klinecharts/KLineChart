import{C as n}from"./theme.K8eayj2q.js";import{b as t,o as a,k as e}from"./framework.5fYc0k1z.js";const i=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('setPaneOptions-basic-chart')\\nconst paneId = chart.createIndicator('VOL')\\n\\nchart.setPaneOptions({\\n  id: paneId,\\n  height: 160\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n      })\\n  }\\n})\\n"}`),_={__name:"index",setup(s){return(c,r)=>(a(),t(n,{title:"setPaneOptions-basic",chartId:"setPaneOptions-basic-chart",code:e(i).js},null,8,["code"]))}},o=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('setPaneOptions-dragEnabled-chart')\\nconst paneId = chart.createIndicator('MACD')\\n\\nchart.setPaneOptions({\\n  id: paneId,\\n  dragEnabled: false\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n      })\\n  }\\n})\\n"}`),k={__name:"index",setup(s){return(c,r)=>(a(),t(n,{title:"setPaneOptions-dragEnabled",chartId:"setPaneOptions-dragEnabled-chart",code:e(o).js},null,8,["code"]))}},d=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('setPaneOptions-state-chart')\\nchart.createIndicator('MACD')\\n\\nchart.setPaneOptions({\\n  id: 'candle_pane',\\n  state: 'minimize'\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n      })\\n  }\\n})\\n"}`),b={__name:"index",setup(s){return(c,r)=>(a(),t(n,{title:"setPaneOptions-state",chartId:"setPaneOptions-state-chart",code:e(d).js},null,8,["code"]))}},h=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('setPaneOptions-axis-basic-chart')\\nchart.createIndicator('MACD')\\n\\nchart.setPaneOptions({\\n  id: 'candle_pane',\\n  axis: {\\n    name: 'logarithm',\\n    reverse: true\\n  }\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n      })\\n  }\\n})\\n"}`),u={__name:"index",setup(s){return(c,r)=>(a(),t(n,{title:"setPaneOptions-axis-basic",chartId:"setPaneOptions-axis-basic-chart",code:e(h).js},null,8,["code"]))}},l=JSON.parse(`{"js":"import { init } from 'klinecharts'\\n\\nconst chart = init('setPaneOptions-axis-extension-chart')\\nchart.createIndicator('MACD')\\n\\nchart.setPaneOptions({\\n  id: 'candle_pane',\\n  axis: {\\n    createTicks: ({ defaultTicks }) => {\\n      return defaultTicks.map(\\n        ({ coord, value, text }) => ({ coord, value, text: \`$\${text}\` })\\n      )\\n    }\\n  }\\n})\\n\\nchart.setSymbol({ ticker: 'TestSymbol' })\\nchart.setPeriod({ span: 1, type: 'day' })\\nchart.setDataLoader({\\n  getBars: ({\\n    callback\\n  }) => {\\n    fetch('https://klinecharts.com/datas/kline.json')\\n      .then(res => res.json())\\n      .then(dataList => {\\n        callback(dataList)\\n      })\\n  }\\n})\\n"}`),O={__name:"index",setup(s){return(c,r)=>(a(),t(n,{title:"setPaneOptions-axis-extension",chartId:"setPaneOptions-axis-extension-chart",code:e(l).js},null,8,["code"]))}};export{_,k as a,b,u as c,O as d};
