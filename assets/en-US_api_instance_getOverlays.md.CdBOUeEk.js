import{_ as s}from"./chunks/index.Bv6uwxI_.js";import{c as e,o as i,X as n,J as t}from"./chunks/framework.BZF_sum5.js";import"./chunks/theme.DSRl3N5b.js";const c=JSON.parse('{"title":"getOverlays(filter?)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en-US/api/instance/getOverlays.md","filePath":"en-US/api/instance/getOverlays.md","lastUpdated":1739902436000}'),l={name:"en-US/api/instance/getOverlays.md"},o=Object.assign(l,{setup(r){return(h,a)=>(i(),e("div",null,[a[0]||(a[0]=n(`<h1 id="getoverlays-filter" tabindex="-1">getOverlays(filter?) <a class="header-anchor" href="#getoverlays-filter" aria-label="Permalink to “getOverlays(filter?)”">​</a></h1><p><code>getOverlays</code> get overlay information.</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to “Reference”">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id?: string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    groupId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    paneId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Overlay[]</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h3><ul><li><code>filter</code> Filter conditions. <ul><li><code>id</code> Overlay id.</li><li><code>name</code> Overlay name.</li><li><code>groupId</code> Group id.</li><li><code>paneId</code> Pane id.</li></ul></li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h3><p><code>getOverlays</code> returns <code>Overlay[]</code> .</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to “Usage”">​</a></h2><h3 id="basic" tabindex="-1">Basic usage <a class="header-anchor" href="#basic" aria-label="Permalink to “Basic usage”">​</a></h3>`,10)),t(s)]))}});export{c as __pageData,o as default};
