import{P as o,a as t}from"./chunks/ProjectModuleExplain.Bhd0INTl.js";import{c as n,o as l,ac as i,J as a,j as d,a as r}from"./chunks/framework.5fYc0k1z.js";const h=JSON.parse('{"title":"Local Development","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/guide/local-development.md","filePath":"en-US/guide/local-development.md","lastUpdated":1747419494000}'),c={name:"en-US/guide/local-development.md"},b=Object.assign(c,{setup(s){return(p,e)=>(l(),n("div",null,[e[0]||(e[0]=i('<h1 id="local-development" tabindex="-1">Local Development <a class="header-anchor" href="#local-development" aria-label="Permalink to “Local Development”">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>If you see this, you may be interested in improving the KLineChart core. Thank you <a href="https://github.com/fish2016" target="_blank" rel="noreferrer">@fish2016</a> This document was written.</p><h2 id="notice" tabindex="-1">Notice <a class="header-anchor" href="#notice" aria-label="Permalink to “Notice”">​</a></h2><h3 id="file-directory-description" tabindex="-1">File directory description <a class="header-anchor" href="#file-directory-description" aria-label="Permalink to “File directory description”">​</a></h3>',5)),a(o),e[1]||(e[1]=d("h3",{id:"module-dependencies",tabindex:"-1"},[r("Module dependencies "),d("a",{class:"header-anchor",href:"#module-dependencies","aria-label":"Permalink to “Module dependencies”"},"​")],-1)),a(t),e[2]||(e[2]=i(`<p>The above diagram shows the hierarchy of chart modules from top to bottom, with the lower layer serving as the upper layer container.</p><ul><li><code>Figure</code> Basic shapes, such as circle, polygon, rect, text, etc.</li><li><code>View</code> Retrieve data from <code>ChartStore</code> and perform single business plotting, such as candlesticks, area, grid line, crosshair, indicator, etc</li><li><code>Widget</code> Create canvas and assemble the relevant <code>View</code> together.</li><li><code>Pane</code> Create dom container and assemble the <code>Widget</code> together.</li><li><code>Chart</code> Manage the Panes, such as deleting and adding operations, to form the final chart. In addition, event distribution is also carried out to manipulate the data in <code>ChartStore</code> and notify subordinate components to update as needed.</li></ul><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to “Development”">​</a></h2><h3 id="installation-dependencies" tabindex="-1">Installation dependencies <a class="header-anchor" href="#installation-dependencies" aria-label="Permalink to “Installation dependencies”">​</a></h3><p>Project mandatory use of [pnpm]（<a href="https://pnpm.io" target="_blank" rel="noreferrer">https://pnpm.io</a>）As a package manager, it is necessary to use pnpm to install dependencies.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Root dir run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="execute-command-description" tabindex="-1">Execute command description <a class="header-anchor" href="#execute-command-description" aria-label="Permalink to “Execute command description”">​</a></h3><ul><li><code>code-lint</code>: Run <code>pnpm run code-lint</code> verify code rules.</li><li><code>clean</code>: Run <code>pnpm run clean</code> clean up the built files.</li><li><code>build-esm</code>: Run <code>pnpm run build-esm</code> built esm module.</li><li><code>build-cjs</code>: Run <code>pnpm run build-cjs</code> built commonjs module.</li><li><code>build-umd:dev</code>: Run <code>pnpm run build-umd:dev</code> built umd development module.</li><li><code>build-umd:prod</code>: Run <code>pnpm run build-umd:dev</code> built umd production module.</li><li><code>build-umd</code>: Run <code>pnpm run build-umd</code> built umd development and production module。</li><li><code>build-core</code>: Run <code>pnpm run build-core</code> built esm, commonjs umd development and umd production module.</li><li><code>build-dts</code>: Run <code>pnpm run build-dts</code> generate typescript dependency files.</li><li><code>build</code>: Run <code>pnpm run build</code> built esm, commonjs umd development and umd production module and generate typescript dependency files.</li></ul><h3 id="debug" tabindex="-1">Debug <a class="header-anchor" href="#debug" aria-label="Permalink to “Debug”">​</a></h3><p>This project does not have a debugging project and requires the creation of a new project, use <code>npm link</code> import，or import <code>index.ts</code> debug. You can use <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">vite</a> create a project.</p>`,10))]))}});export{h as __pageData,b as default};
